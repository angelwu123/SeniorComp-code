import time
import openpyxl
from selenium import webdriver
from selenium.webdriver.common.by import By
from openpyxl import load_workbook
from pyquery import PyQuery as pq


INDEX_URL = 'https://www.usnews.com/education/best-high-schools/california/districts/arcadia-unified-school-district/arcadia-high-school-{number}'
cities = ['Agoura Hills','Alhambra','Arcadia','Artesia','Avalon','Azusa','Baldwin Park','Bell','Bell Gardens','Bellflower',
          'Beverly Hills','Burbank','Calabasas','Carson','Cerritos','City of Industry','Claremont','Compton','Covina','Culver City',
          'Diamond Bar','Downey','Duarte','El Monte','El Segundo','Gardena','Glendale','Glendora','Hawthorne','Huntington Park','Inglewood',
          'La CaÃ±ada Flintridge','La Habra Heights','La Mirada','La Puente','Lakewood','Lancaster','Lawndale','Long Beach','Los Angeles','Lynwood',
          'Malibu','Manhattan Beach','Maywood','Monrovia','Montebello','Monterey Park','Norwalk','Palmdale','Palos Verdes Estates','Paramount',
          'Pasadena','Pomona','Rancho Palos Verdes','Redondo Beach','Rolling Hills','Rolling Hills Estates','Rosemead','San Dimas','San Fernando',
          'San Gabriel','San Marino','Santa Clarita','Santa Fe Springs','Santa Monica','South El Monte','South Gate','South Pasadena','Temple City',
          'Torrance','Walnut','West Covina','Westlake Village','Whittier']

dict = [2434,1663,1787,1705,2498,1805, 1905,2516,2801,1823,1833,1862,2435,2519,1706,2308,1962,1994,2032,2035,3634,2071,
        2073,2117,2124,2540,2277,2281,1916,2550,2352,2141,2243,2899,2304,2492,1769,1919,409310,2562,2723,3400,1542,2645,
        2798,2802,2807,2900,1767,2999,3005,3015,3061,2999,1565,2997,2998,2119,1849,2585,1665,3334,3387,3659,3402,2115,
        2587,3015,3555,3563,3633,3645,2003,3660]

#dict2 = [409310,2562,2723,3400,1542,2645,2798,2802,2807,2900,1767,2999,3005,3015,3061,2999,1565,2997,2998,2119,1849,2585,1665,3334,3387,3659,3402,2115,2587,3015,3555,3563,3633,3645,2003,3660]

#dict3 = [409310,2562]

def createExcel():
    wb = openpyxl.Workbook()
    wb.save(f'../USNews/schoolInfo.xlsx')

    wb = load_workbook(filename='schoolInfo.xlsx')
    ws = wb.active

    ws.cell(1, 1).value = 'sName'
    ws.cell(1, 2).value = 'californiaRankings'
    ws.cell(1, 3).value = 'tEnroll'
    ws.cell(1, 4).value = 'Ratio'
    ws.cell(1, 5).value = 'white'
    ws.cell(1, 6).value = 'asian'
    ws.cell(1, 7).value = 'hispanic'
    ws.cell(1, 8).value = 'black'
    ws.cell(1, 9).value = 'American Indian/Alaska Native'
    ws.cell(1, 10).value = 'Native Hawaiian/Pacific Islander'
    ws.cell(1, 11).value = 'male'
    ws.cell(1, 12).value = 'female'
    ws.cell(1, 13).value = 'District#School'
    ws.cell(1, 14).value = 'District#student'
    ws.cell(1, 15).value = 'address'
    ws.cell(1, 16).value = 'city'

    wb.save('schoolInfo.xlsx')


def main():
    createExcel()
    #loop through every urls one by one
    d = 1
    for i in range(0,len(dict)):
        browser = webdriver.Chrome()
        browser.get(INDEX_URL.format(number=dict[i]))
        browser.implicitly_wait(5)

        wb = load_workbook(filename='schoolInfo.xlsx')
        ws = wb.active
        browser.implicitly_wait(10)
        time.sleep(3)

        #parsing url
        doc = pq(browser.page_source)
        datas = []
        data = []

        name = doc('.knjdTp')
        sName = name('.hcuouP').text()

        enroll = browser.find_element(By.CSS_SELECTOR, 'strong[data-test-id="ccd_member"]').text
        ratio = browser.find_element(By.CSS_SELECTOR, 'strong[data-test-id="student_teacher_ratio_rounded"]').text

        race = doc('.cuHcPI')
        races = []
        perc = []

        for k in race.items():
            g = 0
            percent = k('.fPxKtP').text()
            r = k('.hWVZdP').text()

            perc.append(percent)
            races.append(r)
            g += 1

        white = '0%'
        asian = '0%'
        hispanic = '0%'
        black = '0%'
        Am_native = '0%'
        hawaii = '0%'

        print(races)
        for r in range(0,len(races)):
            if races[r] == 'White':
                white = perc[r]
            if races[r] == 'Asian':
                asian = perc[r]
            if races[r] == 'Hispanic':
                hispanic = perc[r]
            if races[r] == 'Black':
                black = perc[r]
            if races[r] == 'American Indian/Alaska Native':
                Am_native = perc[r]
            if races[r] == 'Native Hawaiian/Pacific Islander':
                hawaii = perc[r]

        male = browser.find_element(By.XPATH, '//*[@id="students_teachers_section"]/react-trigger[2]/div/div[2]/div/div/div/div/div/div[2]/div/div[2]/b').text
        female = browser.find_element(By.XPATH, '//*[@id="students_teachers_section"]/react-trigger[2]/div/div[2]/div/div/div/div/div/div[2]/div/div[1]/b').text

        districtS = browser.find_element(By.XPATH, '//*[@id="district_section"]/div/div[1]/p[2]/strong').text
        districtSchool = int(districtS)

        if districtSchool > 1:
            districtTotal = browser.find_element(By.XPATH, '//*[@id="district_section"]/div/div[2]/p[2]/strong').text
        else:
            districtTotal = enroll

        address = browser.find_element(By.CLASS_NAME, 'Paragraph-sc-1iyax29-0.dDjpVm').text
        address = address[0:len(address)-16]

        city = cities[i]
        data.append(sName)

        unrank = browser.find_element(By.CLASS_NAME, 'gwrUrw').text
        unrank = unrank.split()

        #some time the school is unranked
        if unrank[len(unrank) - 1] == 'Unranked':
            rank = 'N/A'
            data.append(rank)

        else:
            # parse the rank string and get the California ranking
            rank = browser.find_element(By.CLASS_NAME, 'cyYFiR').text
            rank = rank.split()
            data.append(rank[4])

        data.append(enroll)
        data.append(ratio)
        data.append(white)
        data.append(asian)
        data.append(hispanic)
        data.append(black)
        data.append(Am_native)
        data.append(hawaii)
        data.append(male)
        data.append(female)
        data.append(districtSchool)
        data.append(districtTotal)
        data.append(address)
        data.append(city)

        datas.append(data)

        #write the information from the website to the excel
        for data in datas:
            ws.cell(d + 1, 1).value = data[0]
            ws.cell(d + 1, 2).value = data[1]
            ws.cell(d + 1, 3).value = data[2]
            ws.cell(d + 1, 4).value = data[3]
            ws.cell(d + 1, 5).value = data[4]
            ws.cell(d + 1, 6).value = data[5]
            ws.cell(d + 1, 7).value = data[6]
            ws.cell(d + 1, 8).value = data[7]
            ws.cell(d + 1, 9).value = data[8]
            ws.cell(d + 1, 10).value = data[9]
            ws.cell(d + 1, 11).value = data[10]
            ws.cell(d + 1, 12).value = data[11]
            ws.cell(d + 1, 13).value = data[12]
            ws.cell(d + 1, 14).value = data[13]
            ws.cell(d + 1, 15).value = data[14]
            ws.cell(d + 1, 16).value = data[15]
        d += 1
        wb.save('schoolInfo.xlsx')
        browser.close()

main()

